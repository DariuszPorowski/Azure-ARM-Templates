{
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "existingVirtualNetworkResourceGroup":{
      "type":"string",
      "defaultValue":"contosorg001",
      "minLength":1,
      "maxLength":80,
      "metadata":{
        "description":"Name of the existing VNET resource group."
      }
    },
    "existingVirtualNetworkName":{
      "type":"string",
      "defaultValue":"contosovnet001",
      "minLength":1,
      "maxLength":80,
      "metadata":{
        "description":"Existing VNET that contains the domain controller."
      }
    },
    "existingSubnetName":{
      "type":"string",
      "defaultValue":"subnet001",
      "minLength":1,
      "maxLength":80,
      "metadata":{
        "description":"Existing subnet that contains the domain controller."
      }
    },
    "privateStaticIpAddress":{
      "type":"string",
      "defaultValue":"10.0.0.30",
      "minLength":7,
      "maxLength":16,
      "metadata":{
        "description":"Private static IP Address for VM. Must be free in selected subnet."
      }
    },
    "vmName":{
      "type":"string",
      "defaultValue":"VM001",
      "minLength":3,
      "maxLength":15,
      "metadata":{
        "description":"Name of the virtual machine. Up to 15 chars."
      }
    },
    "imageSku":{
      "type":"string",
      "defaultValue":"2012-R2-Datacenter",
      "allowedValues":[
        "2012-R2-Datacenter",
        "2012-Datacenter",
        "2008-R2-SP1",
        "Windows-Server-Technical-Preview"
      ],
      "metadata":{
        "description":"Edition of Windows Server OS."
      }
    },
    "vmSize":{
      "type":"string",
      "defaultValue":"Standard_A2",
      "allowedValues":[
        "Basic_A0",
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata":{
        "description":"The size of the virtual machines. For more information see https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs"
      }
    },
    "osDiskStorageAccountName":{
      "type":"string",
      "defaultValue":"contosostorage001",
      "minLength":3,
      "maxLength":24,
      "metadata":{
        "description":"Starage Account name for OS disk."
      }
    },
    "dataDiskStorageAccountName":{
      "type":"string",
      "defaultValue":"contosostorage001",
      "minLength":3,
      "maxLength":24,
      "metadata":{
        "description":"Starage Account name for data disk."
      }
    },
    "dataDiskVhdSize":{
      "type":"int",
      "defaultValue":200,
      "minValue":10,
      "maxValue":1023,
      "metadata":{
        "description":"Size of VHD data disk in GB."
      }
    },
    "diagnosticsStorageAccountName":{
      "type":"string",
      "defaultValue":"contosostorage001",
      "minLength":3,
      "maxLength":24,
      "metadata":{
        "description":"Starage Account name for diagnostics."
      }
    },
    "domainToJoin":{
      "type":"string",
      "defaultValue":"contoso.local",
      "minLength":3,
      "metadata":{
        "description":"The FQDN of the AD domain."
      }
    },
    "domainUsername":{
      "type":"string",
      "defaultValue":"DomainUser",
      "minLength":1,
      "maxLength":15,
      "metadata":{
        "description":"Username of the account on the domain."
      }
    },
    "domainPassword":{
      "type":"string",
      "defaultValue":"P@ssw0rd1!",
      "minLength":8,
      "maxLength":123,
      "metadata":{
        "description":"Password of the account on the domain."
      }
    },
    "ouPath":{
      "type":"string",
      "defaultValue":"OU=Servers,DC=contoso,DC=local",
      "minLength":14,
      "metadata":{
        "description":"Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU,DC=domain,DC=Domain,DC=com'."
      }
    },
    "domainJoinOptions":{
      "type":"int",
      "defaultValue":3,
      "metadata":{
        "description":"Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154.aspx"
      }
    },
    "vmAdminUsername":{
      "type":"string",
      "defaultValue":"LocalAdmin",
      "minLength":1,
      "maxLength":15,
      "metadata":{
        "description":"The name of the administrator of the new VM and the domain. Exclusion list: 'admin', 'administrator'."
      }
    },
    "vmAdminPassword":{
      "type":"securestring",
      "defaultValue":"P@ssw0rd1!",
      "minLength":8,
      "maxLength":123,
      "metadata":{
        "description":"The password for the administrator account of the new VM and the domain."
      }
    }
  },
  "variables":{
    "apiVersion":"2015-06-15",
    "location":"[resourceGroup().location]",
    "publicIpAddressType":"Dynamic",
    "imagePublisherName":"MicrosoftWindowsServer",
    "imageOffer":"WindowsServer",
    "vmName":"[trim(parameters('vmName'))]",
    "nicName":"[concat(variables('vmName'),'nic01')]",
    "publicIpAddressName":"[concat(variables('vmName'),'pip01nic01')]",
    "networkSecurityGroupName":"[concat(variables('vmName'),'nsg01nic01')]",
    "dnsLabelPrefix":"[toLower(concat(variables('vmName'),'-',uniquestring(concat(resourceGroup().id,variables('vmName'),deployment().name))))]",
    "subnetId":"[concat(resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName')),'/subnets/', parameters('existingSubnetName'))]"
  },
  "resources":[
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Network/publicIPAddresses",
      "name":"[variables('publicIpAddressName')]",
      "location":"[variables('location')]",
      "properties":{
        "publicIPAllocationMethod":"[variables('publicIpAddressType')]",
        "dnsSettings":{
          "domainNameLabel":"[variables('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Network/networkSecurityGroups",
      "name":"[variables('networkSecurityGroupName')]",
      "location":"[variables('location')]",
      "properties":{
        "securityRules":[
          {
            "name":"AllowRdp",
            "properties":{
              "description":"Allow RDP",
              "protocol":"Tcp",
              "sourcePortRange":"*",
              "destinationPortRange":"3389",
              "sourceAddressPrefix":"Internet",
              "destinationAddressPrefix":"*",
              "access":"Allow",
              "priority":1000,
              "direction":"Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Network/networkInterfaces",
      "name":"[variables('nicName')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties":{
        "ipConfigurations":[
          {
            "name":"ipconfig",
            "properties":{
              "privateIPAllocationMethod":"Static",
              "privateIPAddress":"[parameters('privateStaticIpAddress')]",
              "publicIPAddress":{
                "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
              },
              "subnet":{
                "id":"[variables('subnetId')]"
              }
            }
          }
        ],
        "networkSecurityGroup":{
          "id":"[resourceId('Microsoft.Network/networkSecurityGroups/',variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Compute/virtualMachines",
      "name":"[variables('vmName')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ],
      "properties":{
        "hardwareProfile":{
          "vmSize":"[parameters('vmSize')]"
        },
        "osProfile":{
          "computerName":"[variables('vmName')]",
          "adminUsername":"[parameters('vmAdminUsername')]",
          "adminPassword":"[parameters('vmAdminPassword')]"
        },
        "storageProfile":{
          "imageReference":{
            "publisher":"[variables('imagePublisherName')]",
            "offer":"[variables('imageOffer')]",
            "sku":"[parameters('imageSku')]",
            "version":"latest"
          },
          "osDisk":{
            "name":"[variables('vmName')]",
            "vhd":{
              "uri":"[concat('https://',parameters('osDiskStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'.vhd')]"
            },
            "caching":"ReadWrite",
            "createOption":"FromImage"
          },
          "dataDisks":[
            {
              "name":"[concat(variables('vmName'),'-data01')]",
              "vhd":{
                "Uri":"[concat('https://',parameters('dataDiskStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'-data01.vhd')]"
              },
              "caching":"ReadWrite",
              "createOption":"Empty",
              "diskSizeGB":"[parameters('dataDiskVhdSize')]",
              "lun":0
            }
          ]
        },
        "networkProfile":{
          "networkInterfaces":[
            {
              "id":"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile":{
          "bootDiagnostics":{
            "enabled":"true",
            "storageUri":"[concat('https://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Compute/virtualMachines/extensions",
      "name":"[concat(variables('vmName'),'/JsonADDomainExtension')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties":{
        "publisher":"Microsoft.Compute",
        "type":"JsonADDomainExtension",
        "typeHandlerVersion":"1.0",
        "settings":{
          "Name":"[toLower(parameters('domainToJoin'))]",
          "OUPath":"[parameters('ouPath')]",
          "User":"[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
          "Restart":"true",
          "Options":"[parameters('domainJoinOptions')]"
        },
        "protectedsettings":{
          "Password":"[parameters('domainPassword')]"
        }
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Compute/virtualMachines/extensions",
      "name":"[concat(variables('vmName'),'/BGInfo')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties":{
        "publisher":"Microsoft.Compute",
        "type":"BGInfo",
        "typeHandlerVersion":"2.1",
        "settings":{

        },
        "protectedSettings":null
      }
    }
  ]
}
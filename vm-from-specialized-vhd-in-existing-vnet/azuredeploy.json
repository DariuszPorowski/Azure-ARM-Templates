{
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "existingVirtualNetworkResourceGroup":{
      "type":"string",
      "defaultValue":"contosorg001",
      "minLength":1,
      "maxLength":80,
      "metadata":{
        "description":"Name of the existing VNET resource group."
      }
    },
    "existingVirtualNetworkName":{
      "type":"string",
      "defaultValue":"contosovnet001",
      "minLength":1,
      "maxLength":80,
      "metadata":{
        "description":"Existing VNET that contains the domain controller."
      }
    },
    "existingSubnetName":{
      "type":"string",
      "defaultValue":"subnet001",
      "minLength":1,
      "maxLength":80,
      "metadata":{
        "description":"Existing subnet that contains the domain controller."
      }
    },
    "privateStaticIpAddress":{
      "type":"string",
      "defaultValue":"10.0.0.30",
      "minLength":7,
      "maxLength":16,
      "metadata":{
        "description":"Private static IP Address for VM. Must be free in selected subnet."
      }
    },
    "vmName":{
      "type":"string",
      "defaultValue":"VM001",
      "minLength":3,
      "maxLength":15,
      "metadata":{
        "description":"Name of the virtual machine. Up to 15 chars."
      }
    },
    "osType":{
      "type":"string",
      "allowedValues":[
        "Windows",
        "Linux"
      ],
      "defaultValue":"Windows",
      "metadata":{
        "description":"Type of OS on the existing VHD file."
      }
    },
    "vmSize":{
      "type":"string",
      "allowedValues":[
        "Basic_A0",
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "defaultValue":"Standard_A2",
      "metadata":{
        "description":"The size of the virtual machines. For more information see https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs"
      }
    },
    "osDiskVhdUri":{
      "type":"string",
      "defaultValue":"https://contosostorage001.blob.core.windows.net/vhds/vm001.vhd",
      "minLength":42,
      "metadata":{
        "description":"Uri of the existing VHD in ARM standard or premium storage."
      }
    },
    "diagnosticsStorageAccountName":{
      "type":"string",
      "defaultValue":"contosostorage001",
      "minLength":3,
      "maxLength":24,
      "metadata":{
        "description":"Starage Account name for diagnostics."
      }
    }
  },
  "variables":{
    "apiVersion":"2015-06-15",
    "location":"[resourceGroup().location]",
    "publicIpAddressType":"Dynamic",
    "vmName":"[trim(parameters('vmName'))]",
    "nicName":"[concat(variables('vmName'),'nic01')]",
    "publicIpAddressName":"[concat(variables('vmName'),'pip01nic01')]",
    "networkSecurityGroupName":"[concat(variables('vmName'),'nsg01nic01')]",
    "dnsLabelPrefix":"[toLower(concat(variables('vmName'),'-',uniquestring(concat(resourceGroup().id,variables('vmName'),deployment().name))))]",
    "subnetId":"[concat(resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName')),'/subnets/', parameters('existingSubnetName'))]",
    "nsgTemplatelink":"[concat('https://raw.githubusercontent.com/DariuszPorowski/Azure-ARM-Templates/master/vm-from-specialized-vhd-in-existing-vnet/',toLower(parameters('osType')),'.nsg.json')]"
  },
  "resources":[
    {
      "apiVersion":"2015-11-01",
      "name":"[variables('networkSecurityGroupName')]",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"Incremental",
        "templateLink":{
          "uri":"[variables('nsgTemplatelink')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "networkSecurityGroupName":{
            "value":"[variables('networkSecurityGroupName')]"
          }
        }
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Network/publicIPAddresses",
      "name":"[variables('publicIpAddressName')]",
      "location":"[variables('location')]",
      "properties":{
        "publicIPAllocationMethod":"[variables('publicIpAddressType')]",
        "dnsSettings":{
          "domainNameLabel":"[variables('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Network/networkInterfaces",
      "name":"[variables('nicName')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[concat('Microsoft.Resources/deployments/', variables('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties":{
        "ipConfigurations":[
          {
            "name":"ipconfig",
            "properties":{
              "privateIPAllocationMethod":"Static",
              "privateIPAddress":"[parameters('privateStaticIpAddress')]",
              "publicIPAddress":{
                "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
              },
              "subnet":{
                "id":"[variables('subnetId')]"
              }
            }
          }
        ],
        "networkSecurityGroup":{
          "id":"[resourceId('Microsoft.Network/networkSecurityGroups/',variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Compute/virtualMachines",
      "name":"[variables('vmName')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ],
      "properties":{
        "hardwareProfile":{
          "vmSize":"[parameters('vmSize')]"
        },
        "storageProfile":{
          "osDisk":{
            "name":"[variables('vmName')]",
            "osType":"[parameters('osType')]",
            "vhd":{
              "uri":"[parameters('osDiskVhdUri')]"
            },
            "caching":"ReadWrite",
            "createOption":"Attach"
          }
        },
        "networkProfile":{
          "networkInterfaces":[
            {
              "id":"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile":{
          "bootDiagnostics":{
            "enabled":"true",
            "storageUri":"[concat('https://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    }
  ]
}